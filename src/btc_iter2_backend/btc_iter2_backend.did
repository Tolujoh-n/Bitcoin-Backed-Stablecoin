type Account = record {
    owner: principal;
    subaccount: opt vec nat8;
};

type Invoice = record {
    to: Account;
    amount: nat;
};

type Mint = record {
    amount: nat;
    to: Account;
    created_at_time: opt nat;
    memo: opt vec nat8;
};

type InvoiceMap = record {
    prncpl: principal;
    invoice: Invoice;
};

type Minter = record {
    invoices: vec InvoiceMap;
};

service : {
    init: () -> ();
    get_stable: () -> (result: variant { Ok: text; Err: text });
    get_invoice: () -> (Invoice);
}


